version: '3'

networks:
  etl-network: 
    external: True


volumes:
  storage:
    driver: local
  es-volume:
  db-volume:


services:

  db:
    container_name: db
    image: postgres:13
    volumes:
      - db-volume:/var/lib/postgresql/data/
      - ./etc/db/dump.sql:/docker-entrypoint-initdb.d/dump.sql:ro
    env_file: ./postgres_to_es/.env
    networks:
      - etl-network

  etl:
    container_name: etl
    build: ./postgres_to_es
    depends_on:
      - elasticsearch
      - storage
      - db
      - es_index
    env_file:
      - ./postgres_to_es/.env
    networks:
      - etl-network
    restart: "always"

  elasticsearch:
    container_name: elasticsearch
    image:  elasticsearch:7.17.1
    volumes:
      - es-volume:/usr/share/elasticsearch/data
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    expose:
      - "9200"
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=5s" ]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - etl-network

  es_index:
    image: appropriate/curl
    command: [
      "curl", "-s", "-XPUT", "http://elasticsearch:9200/movies", "-H", "Content-Type: application/json", "--data-binary", "@/es_schema.json"
    ]
    volumes:
      - ./etc/es/es_schema.json:/es_schema.json
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - etl-network

  storage:
    container_name: storage
    image: redis:6.2-alpine
    restart: always
    volumes:
      - storage:/data
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - etl-network
